const
dabar = new Date().toISOString().split('T')[0],
dabar_metai = dabar.split('-')[0].slice(2,4),
dabar_menuo = dabar.split('-')[1],
dabar_diena = dabar.split('-')[2],
savaites_dienos = ['Sekm.', 'Pirm.', 'Antr.', 'Treč.', 'Ketv.', 'Penkt.', 'Šešt.'],
menesiai = ['Sausis', 'Vasaris', 'Kovas', 'Balandis', 'Gegužė', 'Birželis', 'Liepa', 'Rugpjūtis', 'Rugsėjis', 'Spalis', 'Lapkritis', 'Gruodis'],
zaidimai = [
	// { id: 'b0', lokacija: 'birzai', zaidimas: 'monteball', pavadinimas: 'Monteball Čempionatas 2024', trukme: 150, duobutes: 8, kaina: 19, cempionatas: true, nuo: 240501, iki: 240921 },
	{ id: 'b1', lokacija: 'birzai', zaidimas: 'monteball', pavadinimas: '14 duobučių', trukme: 210, duobutes: 14, kaina: 19, cempionatas: false },
	{ id: 'b2', lokacija: 'birzai', zaidimas: 'monteball', pavadinimas: '11 duobučių', trukme: 180, duobutes: 11, kaina: 17, cempionatas: false },
	{ id: 'b3', lokacija: 'birzai', zaidimas: 'monteball', pavadinimas: '8 duobutės', trukme: 150, duobutes: 8, kaina: 15, cempionatas: false },
	{ id: 'b4', lokacija: 'birzai', zaidimas: 'monteball', pavadinimas: '5 duobutės', trukme: 90, duobutes: 5, kaina: 10, cempionatas: false },
	{ id: 'bt2', lokacija: 'birzai', zaidimas: 'tablemonteball', pavadinimas: 'Tablemonteball 4val.', trukme: 240, kaina: 15, cempionatas: false },
	{ id: 'bt1', lokacija: 'birzai', zaidimas: 'tablemonteball', pavadinimas: 'Tablemonteball 2val.', trukme: 120, kaina: 10, cempionatas: false },
	// { id: 'v0', lokacija: 'vilnius', zaidimas: 'monteball', pavadinimas: 'Monteball Čempionatas 2024', trukme: 150, duobutes: 8, kaina: 19, cempionatas: true, nuo: 240501, iki: 240921 },
	{ id: 'v1', lokacija: 'vilnius', zaidimas: 'monteball', pavadinimas: '14 duobučių', trukme: 210, duobutes: 14, kaina: 20, cempionatas: false },
	{ id: 'v2', lokacija: 'vilnius', zaidimas: 'monteball', pavadinimas: '11 duobučių', trukme: 180, duobutes: 11, kaina: 18, cempionatas: false },
	{ id: 'v3', lokacija: 'vilnius', zaidimas: 'monteball', pavadinimas: '8 duobutės', trukme: 150, duobutes: 8, kaina: 17, cempionatas: false },
	{ id: 'v4', lokacija: 'vilnius', zaidimas: 'monteball', pavadinimas: '5 duobutės', trukme: 90, duobutes: 5, kaina: 15, cempionatas: false }
]

var rezervacija = {
	nr: null,
	lokacija: 'birzai',
	zaidimas: { id: 'b0', lokacija: 'birzai', zaidimas: 'monteball', trukme: 150, duobutes: 8, kaina: 19, cempionatas: true, nuo: 240501, iki: 240921 },
	diena: null,
	zaidejai: 9,
	kontaktas: {
		vardas: '',
		el_pastas: '',
		telefonas: '',
	},
	mokejimas: {
		procentas: 100,
		suma: 171,
		moketi: 171,
		apmoketa: 0,
		liko_moketi: 0,
		budas: 'paymentInitiation',
	}
},
metai = dabar_metai, 
menuo = dabar_menuo

function pridetiZaidimus() { hf(e('zaidimas'))
	var filtruoti_zaidimai = zaidimai.filter(zaidimas => zaidimas.lokacija === rezervacija.lokacija)
	var variantu_elementas = e('zaidimai')
	variantu_elementas.innerHTML = ''


		filtruoti_zaidimai.forEach(zaidimas => {
			var new_element = c('div')
			add(variantu_elementas, new_element)
			if(zaidimas.cempionatas) {
				new_element.outerHTML = 
				`
				<div class="opcija f sa ic" name="${zaidimas.id}" onclick="rinktisZaidima(this)">
					<div class="m02 hide600">
						<svg style="max-height: 70px;" width="100px" height="299px" viewBox="0 0 298 299" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
						    <g id="logo-round" transform="translate(-147, -419)">
						            <g transform="translate(147.3511, 419.9689)">
						                <path d="M214.8798,55.2836 L212.5588,53.684 L219.8778,45.5939 L214.8798,55.2836 Z M223.4597,34.6201 L201.5986,56.6031 L206.6553,60.092 L209.2564,57.2851 L212.6858,59.6498 L210.985,63.0791 L216.0431,66.5686 L228.8299,38.3225 L223.4597,34.6201 Z M160.8908,18.4859 L160.0725,12.7656 L148.2151,12.2817 L146.9665,42.7632 L158.5707,43.2386 L159.8545,37.6062 L153.4643,37.3437 L153.7359,30.7018 L158.781,30.9065 L158.9964,25.6527 L153.9516,25.4452 L154.2484,18.2138 L160.8908,18.4859 Z M191.06,25.3528 L189.0048,31.6299 C188.8348,32.1492 188.4371,32.2855 188.0371,32.1546 L185.3184,31.2636 L187.8038,23.6665 L190.7235,24.6223 C191.1235,24.7539 191.1776,24.9931 191.06,25.3528 Z M187.1221,37.6543 L185.3552,43.0541 C185.2118,43.4943 185.0392,43.6148 184.5593,43.4586 L181.6396,42.5027 L183.8787,35.6633 L186.5174,36.5264 C187.037,36.6985 187.331,37.0143 187.1221,37.6543 Z M195.0248,20.4075 L183.708,16.7032 L174.219,45.6962 L184.7359,49.1395 C188.0561,50.2254 189.6738,49.3365 190.7215,46.137 L193.1811,38.6207 C193.6009,37.3397 193.3132,35.919 191.74,35.3155 C193.39,35.4116 194.2367,34.4484 194.7081,33.0092 L197.3123,25.0512 C198.0051,22.9315 197.3038,21.1525 195.0248,20.4075 Z M272.0911,90.5386 L269.396,84.8781 L241.8545,97.9903 L246.7375,108.2452 L252.3181,106.7534 L249.6779,101.208 L272.0911,90.5386 Z M253.6288,61.5958 L249.6064,56.7862 L226.207,76.3589 L233.4966,85.074 L238.5289,82.2354 L234.5859,77.5225 L253.6288,61.5958 Z M85.6358,27.9193 L91.4216,38.7086 L82.8919,29.3902 L77.7748,32.1333 L92.1898,59.0165 L97.1581,56.3511 L91.1342,45.1171 L100.0505,54.8011 L105.5755,51.8378 L91.1605,24.9568 L85.6358,27.9193 Z M71.5448,68.8267 L69.8976,70.4515 C69.5378,70.8072 69.3607,70.7463 69.0361,70.4178 L55.9718,57.1783 C55.7062,56.9078 55.6478,56.6706 55.9474,56.3749 L57.6547,54.6894 C57.9541,54.3932 58.1922,54.4553 58.4578,54.7246 L71.521,67.9641 C71.8461,68.2926 71.9051,68.4718 71.5448,68.8267 Z M61.4716,48.9717 C59.7872,47.2649 57.7948,47.0441 55.7583,49.0542 L50.3663,54.3728 C48.3304,56.3829 48.5246,58.3779 50.209,60.0846 L65.8157,75.8997 C67.4405,77.5463 69.5478,78.3057 71.9745,75.9116 L77.006,70.9458 C79.4327,68.5517 78.7023,66.4337 77.0769,64.7864 L61.4716,48.9717 Z M127.5253,19.6342 L124.8191,14.4162 L113.8091,16.8506 L113.4751,22.743 L117.4598,21.8606 L122.8201,46.0976 L128.9001,44.7537 L123.5398,20.5166 L127.5253,19.6342 Z M29.7003,82.3312 L39.5428,91.2742 L26.6006,88.2125 L23.599,93.909 L50.5905,108.131 L53.3568,102.8798 L40.6242,96.1716 L53.2055,98.4734 L44.2137,89.3594 L56.9469,96.0679 L59.7118,90.8181 L32.7203,76.5984 L29.7003,82.3312 Z" id="monteball"></path>
						                <path d="M174.176,267.2575 C174.2706,269.3591 174.42,271.59 174.617,273.7846 L174.5635,273.7939 C173.8899,271.7269 173.0648,269.6069 172.3694,267.7111 L169.4889,260.176 L165.604,260.972 L173.3162,278.2095 L177.2544,277.4036 L177.6895,258.501 L173.831,259.2891 L174.176,267.2575 Z M189.1191,266.8167 L186.6257,267.6396 L186.0659,263.7621 C185.9145,262.6906 185.5826,260.8121 185.3785,259.5844 L185.4559,259.5575 C185.9899,260.6494 186.8063,262.3391 187.3398,263.3423 L189.1191,266.8167 Z M182.4197,256.9902 L184.4053,275.7464 L187.7032,274.6557 L187.1626,270.4014 L190.3051,269.3631 L192.3786,273.1131 L195.6765,272.0257 L186.4967,255.6429 L182.4197,256.9902 Z M200.4662,258.8687 L199.8726,259.149 L197.5122,254.1853 C197.6497,254.0285 197.9583,253.8516 198.2551,253.7113 C199.7113,253.0781 200.7491,253.7966 201.4305,255.2279 C202.1233,256.6866 201.8736,258.1977 200.4662,258.8687 Z M207.6027,261.1358 C206.424,259.4855 205.363,258.7179 204.0032,258.7893 L203.9794,258.7411 C205.295,257.1758 205.42,255.1476 204.5744,253.3689 C203.893,251.9371 203.0429,250.9782 201.5952,250.5464 C200.0755,250.0898 198.3405,250.5793 196.5629,251.4255 C195.3275,252.0139 194.1018,252.749 193.1831,253.4284 L200.9852,269.8263 L204.2206,268.2876 L201.0597,261.6444 L201.5535,261.4091 C202.6165,260.904 203.417,261.2489 204.6881,263.1592 C205.8166,264.8937 206.9853,266.3969 207.4315,266.7606 L210.8152,265.1503 C210.2247,264.6738 208.8057,262.8355 207.6027,261.1358 Z M140.7847,270.8555 C140.476,274.5885 139.6769,277.2669 138.151,277.1425 C136.7068,277.0223 136.0928,274.8309 136.4378,270.6594 C136.7649,266.7085 137.7499,264.4297 139.1672,264.5462 C140.8025,264.6817 141.0517,267.6396 140.7847,270.8555 Z M139.5876,261.4525 C135.4992,261.116 133.1504,265.2846 132.7354,270.2983 C132.3176,275.3405 133.5875,279.8924 137.7573,280.2368 C141.2467,280.5257 143.9317,277.922 144.5054,270.9984 C144.8527,266.8034 144.0031,261.8187 139.5876,261.4525 Z M123.8981,278.1295 L127.4275,278.7549 L130.6446,260.6006 L127.1149,259.9765 L123.8981,278.1295 Z M218.5379,257.088 C217.3181,257.8737 215.4972,256.5103 213.2297,252.9927 C211.0836,249.6581 210.4767,247.2492 211.6724,246.4799 C213.052,245.5906 215.0504,247.7846 216.798,250.4983 C218.8273,253.6487 219.8262,256.2602 218.5379,257.088 Z M210.1224,243.7697 C206.6726,245.9895 207.3487,250.7296 210.0733,254.9594 C212.8133,259.2137 216.5925,262.0514 220.1111,259.7848 C223.0546,257.8896 223.5986,254.1878 219.8367,248.3479 C217.5557,244.8054 213.8471,241.3681 210.1224,243.7697 Z M125.0266,259.7168 L121.2007,258.6742 L117.2747,263.7278 C116.7758,264.4152 116.2965,265.1364 115.8046,265.7963 L115.7261,265.773 L117.9014,257.7779 L114.4449,256.8379 L109.605,274.6234 L113.0616,275.5633 L114.6705,269.652 L115.8568,268.4163 L116.4399,276.4829 L120.2395,277.5172 L118.9114,266.3567 L125.0266,259.7168 Z M157.6823,277.3857 C157.4921,277.4016 157.2455,277.4183 157.0516,277.3786 L156.0966,264.6942 C156.3075,264.5949 156.5532,264.5779 156.7984,264.5587 C158.9533,264.3954 160.1076,266.6138 160.3911,270.3785 C160.774,275.4516 159.4004,277.2576 157.6823,277.3857 Z M161.1527,262.9959 C159.8967,261.9947 158.2469,261.5709 155.9274,261.7433 C154.51,261.8513 153.2098,262.0871 152.3274,262.374 L153.6852,280.4035 C154.4029,280.4576 155.5294,280.484 156.6743,280.3967 C159.2113,280.2045 160.9662,279.4686 162.133,278.2021 C163.6353,276.6626 164.391,273.9445 164.1107,270.2342 C163.8417,266.664 162.8408,264.2976 161.1527,262.9959 Z M263.3239,171.3099 C264.5368,171.3793 266.4088,171.4975 267.5466,171.5262 L271.4471,171.6806 L270.9394,174.2562 L267.2873,172.8409 C266.2787,172.4488 264.4793,171.815 263.3088,171.3898 L263.3239,171.3099 Z M259.5957,172.694 L276.9146,180.169 L277.5841,176.76 L273.6088,175.1437 L274.2472,171.8969 L278.534,171.9292 L279.2044,168.5203 L260.4235,168.4826 L259.5957,172.694 Z M256.3858,184.5026 L262.1659,188.1528 C264.1958,189.379 266.0122,190.4704 267.8499,191.4214 L267.8222,191.4974 C265.7551,191.1028 263.6669,190.8463 261.313,190.5217 L254.5322,189.6506 L253.2441,193.2279 L270.1469,200.7083 L271.1835,197.826 L265.2727,195.348 C263.5764,194.6512 261.4349,193.7336 259.5745,193.0054 L259.5938,192.9544 C261.5735,193.3484 263.903,193.6642 265.4133,193.8289 L272.0308,194.5837 L272.8837,192.2174 L267.228,188.464 C266.0103,187.6485 264.0405,186.4168 262.3,185.4406 L262.3178,185.3884 C264.1621,186.0812 266.4374,186.7845 268.1215,187.2755 L274.3067,189.1514 L275.3915,186.1419 L257.6656,180.9516 L256.3858,184.5026 Z M275.11,154.317 C273.1745,154.1606 271.2495,154.8797 269.5765,157.2109 C268.2162,159.077 267.5988,159.5736 266.5086,159.4849 C265.5278,159.4044 264.6612,158.5931 264.7868,157.0663 C264.8693,156.0581 265.2341,155.2913 265.6032,154.8003 L262.5704,153.9755 C262.2008,154.4653 261.7798,155.5835 261.6792,156.8104 C261.366,160.6272 263.6583,162.7906 266.6013,163.0307 C268.2644,163.1674 270.2778,162.3742 272.0103,159.9892 C273.1459,158.5219 273.8673,157.7552 275.203,157.866 C276.4015,157.9652 277.2046,158.8814 277.0685,160.5433 C276.986,161.5519 276.5806,162.8079 276.1112,163.5106 L279.1488,164.2814 C279.5545,163.6824 280.0522,162.2963 280.1727,160.8254 C280.4661,157.254 278.462,154.592 275.11,154.317 Z M237.7616,218.9489 L252.4031,230.1506 L254.5798,227.3043 L239.9389,216.1027 L237.7616,218.9489 Z M234.8697,227.5529 C235.8678,228.2435 237.4047,229.3203 238.3597,229.9386 L241.6093,232.1006 L239.836,234.0335 L237.4549,230.9253 C236.7978,230.0627 235.5922,228.5873 234.8141,227.6122 L234.8697,227.5529 Z M230.9644,226.7932 L241.8554,242.1925 L244.2019,239.6331 L241.6516,236.1824 L243.8878,233.7432 L247.5289,236.0033 L249.8755,233.4445 L233.8657,223.6269 L230.9644,226.7932 Z M257.7376,217.7822 C257.6364,217.9429 257.5058,218.1538 257.3575,218.2859 L246.5742,211.5457 C246.6213,211.3149 246.7522,211.1066 246.8823,210.8977 C248.0287,209.0659 250.4974,209.45 253.6974,211.4496 C258.0112,214.1453 258.6512,216.3221 257.7376,217.7822 Z M255.7857,208.3686 C252.7484,206.4688 250.2491,205.8733 248.2024,206.4649 C246.651,206.8813 245.3329,207.9596 244.0996,209.9314 C243.3453,211.1378 242.7656,212.3224 242.4728,213.2048 L257.7997,222.7882 C258.2697,222.2436 258.9571,221.3519 259.5665,220.3767 C260.9153,218.2213 261.3614,216.3711 261.0315,214.6808 C260.6811,212.5582 258.9392,210.3418 255.7857,208.3686 Z M232.5957,246.3291 L232.5416,246.2664 L228.5053,233.108 L226.7649,231.103 L219.7216,237.2196 L221.7668,239.5741 L225.7733,236.0951 L225.8275,236.1581 L230.0165,249.9078 L231.3981,251.4983 L238.8331,245.0416 L236.7885,242.6877 L232.5957,246.3291 Z M249.3916,200.9759 L265.8801,209.2272 L267.4831,206.0241 L250.996,197.7704 L249.3916,200.9759 Z M36.6245,165.0136 L29.8239,164.3375 C27.4601,164.1498 25.3469,163.9866 23.2778,163.9579 L23.2685,163.8755 C25.2938,163.3063 27.2755,162.6004 29.5257,161.8368 L35.9785,159.5815 L35.5292,155.8069 L17.0688,156.6828 L17.4303,159.7221 L23.8249,159.2932 C25.6541,159.1578 27.9788,159.0177 29.9679,158.8377 L29.9738,158.8927 C28.0279,159.4282 25.8041,160.1876 24.3797,160.7131 L18.1239,163.0021 L18.4212,165.5014 L25.1578,166.3246 C26.6114,166.5088 28.9236,166.7285 30.9178,166.8235 L30.9243,166.8771 C28.9658,167.0814 26.6159,167.472 24.8908,167.7881 L18.5196,168.8755 L18.8978,172.0537 L37.0712,168.7629 L36.6245,165.0136 Z M59.7416,231.234 L57.5892,233.2166 L58.7191,234.444 L55.4397,237.4654 C55.3068,237.4013 55.1203,237.2381 54.8978,236.9974 C53.75,235.7507 53.7693,233.3889 57.0288,230.3873 C60.5495,227.1456 63.0916,227.4472 64.7586,229.2549 C65.3516,229.8989 65.7139,230.4944 65.8837,231.0826 L68.5636,229.4315 C68.3759,228.8246 67.892,227.8954 66.9473,226.8686 C64.2617,223.9515 59.6344,223.0433 54.6497,227.5232 C52.28,229.631 50.8422,232.1065 50.7895,234.3119 C50.6996,236.0305 51.3499,237.6256 52.795,239.1934 C53.7024,240.1804 55.0735,241.1836 55.8522,241.5439 L63.0944,234.8762 L59.7416,231.234 Z M50.2923,211.3745 L53.1578,209.719 L48.0983,200.956 L45.2327,202.6117 L46.8595,205.4299 L33.764,212.9931 L35.5555,216.0947 L48.6516,208.5319 L50.2923,211.3745 Z M51.0948,219.9161 L48.3191,222.66 L46.7822,220.5295 L50.3102,218.8268 C51.2878,218.3588 52.9787,217.4755 54.0893,216.9105 L54.1369,216.9757 C53.2562,217.8139 51.8927,219.1012 51.0948,219.9161 Z M55.6705,213.3052 L38.382,220.8566 L40.4153,223.6746 L44.312,221.8754 L46.249,224.5584 L43.2967,227.6677 L45.33,230.4857 L58.1842,216.7895 L55.6705,213.3052 Z M45.3994,195.1762 L41.6495,196.7712 C38.5288,198.0978 35.6806,199.5772 33.9361,200.437 L33.9143,200.3877 C35.1709,199.289 37.0185,197.553 38.1019,196.4671 L43.6346,191.0234 L42.3496,188.004 L25.3863,195.2164 L26.6173,198.1103 L30.4175,196.4949 C33.8403,195.0398 36.4048,193.8005 38.0727,192.9728 L38.0945,193.0244 C36.756,194.0681 34.9118,195.7431 33.7238,196.9311 L28.3822,202.2642 L29.6671,205.2851 L46.6302,198.0706 L45.3994,195.1762 Z M223.7037,232.4577 L223.4035,228.7353 L221.4819,230.4026 L221.6308,232.1581 L221.5891,232.1932 L219.8512,231.8185 L217.8689,233.5403 L221.5766,234.307 L223.7037,232.4577 Z M32.4468,181.5849 L28.8885,183.1919 L28.1892,180.6608 L32.0891,180.2926 C33.1679,180.1928 35.0603,179.9527 36.2985,179.8093 L36.3203,179.8901 C35.2032,180.3686 33.4766,181.101 32.4468,181.5849 Z M39.0359,176.982 L20.2,178.043 L21.1261,181.3924 L25.405,181.0633 L26.2868,184.2515 L22.4377,186.1399 L23.3629,189.4879 L40.1794,181.1214 L39.0359,176.982 Z M108.862,253.7575 L112.0581,251.7945 L109.6954,250.8537 L108.2044,251.7897 L108.1528,251.7693 L107.6888,250.0541 L105.2496,249.0823 L106.27,252.7286 L108.862,253.7575 Z M71.1502,241.3766 L69.1155,244.7091 L67.1125,243.0108 L70.1275,240.5115 C70.9631,239.8207 72.3929,238.5576 73.3349,237.7418 L73.3975,237.7954 C72.7438,238.8187 71.7285,240.397 71.1502,241.3766 Z M74.005,233.8643 L59.0369,245.3454 L61.687,247.5922 L65.0364,244.9086 L67.5615,247.0491 L65.4423,250.7752 L68.0922,253.0219 L77.2812,236.64 L74.005,233.8643 Z M90.8921,246.144 L87.8145,244.3111 L78.387,260.1497 L85.5074,264.3869 L87.0602,261.7799 L83.0174,259.373 L90.8921,246.144 Z M108.1262,254.348 C104.5687,252.9326 101.8293,254.4889 100.7354,257.2334 C100.118,258.7819 100.2878,260.9411 102.0589,263.295 C103.1329,264.8112 103.6511,265.7254 103.1562,266.9695 C102.7106,268.0878 101.5988,268.5875 100.0494,267.969 C99.1094,267.5954 98.0266,266.8406 97.4926,266.1849 L95.8658,268.8634 C96.3179,269.4272 97.4977,270.3096 98.8693,270.855 C102.1983,272.181 105.3295,271.046 106.5748,267.92 C107.2933,266.1169 107.1683,264.0657 105.4287,261.783 C104.0451,259.9362 103.7498,259.1986 104.1543,258.1833 C104.5191,257.2677 105.5498,256.6786 106.9722,257.2464 C107.9121,257.618 108.5375,258.1938 108.8978,258.6895 L110.5761,256.0315 C110.2144,255.5351 109.2691,254.8046 108.1262,254.348 Z M97.0132,249.5509 L88.8409,266.0738 L92.0529,267.6635 L100.2246,251.1386 L97.0132,249.5509 Z M82.1118,240.3573 L71.4878,255.424 L74.4163,257.4896 L85.0408,242.4232 L82.1118,240.3573 Z" id="vidine-apacia"></path>
						                <path d="M33.1342,124.9855 L30.1992,116.3793 L27.4025,124.8872 L18.3101,125.0181 L25.5365,130.3096 L22.8507,138.9972 L30.1159,133.7573 L37.5477,138.9972 L34.8112,130.47 L42.0897,125.0181 L33.1342,124.9855 Z M297.4584,149.0083 L297.4584,148.4473 C297.305,66.6446 230.7609,0.1183 149.0256,0 L148.5873,0 C66.5824,0.1183 2.84217094e-14,66.7968 2.84217094e-14,148.7274 C2.84217094e-14,230.7586 66.7009,297.4868 148.8067,297.4868 C230.6424,297.4868 297.305,230.9134 297.4584,149.0083 Z M279.3113,125.0181 L270.3538,124.9855 L267.4211,116.3793 L264.6241,124.8872 L255.5317,125.0181 L262.7581,130.3096 L260.0731,138.9972 L267.3377,133.7573 L274.7696,138.9972 L272.0308,130.47 L279.3113,125.0181 Z M148.8067,292.7214 C69.3417,292.7214 4.7506,228.1357 4.7506,148.7274 C4.7506,69.3621 69.3417,4.758 148.8067,4.758 C228.1451,4.758 292.6936,69.3621 292.6936,148.7274 C292.6936,228.1357 228.1451,292.7214 148.8067,292.7214 Z M148.8067,242.4481 C130.525,242.4481 113.47,237.2097 99.0499,228.1564 L88.9013,228.1564 C105.5648,240.7474 126.3124,248.2149 148.8067,248.2149 C171.3013,248.2149 192.0495,240.7474 208.7138,228.1564 L198.5624,228.1564 C184.1437,237.2097 167.0874,242.4481 148.8067,242.4481 Z M148.8067,49.2407 C93.8614,49.2407 49.3226,93.784 49.3226,148.7274 C49.3226,169.3157 55.5772,188.4436 66.2891,204.3148 C66.3089,201.9144 67.697,199.8522 69.6694,198.9525 C60.4378,184.4346 55.0868,167.2056 55.0868,148.7274 C55.0868,96.9662 97.0444,55.008 148.8067,55.008 C200.5679,55.008 242.5269,96.9662 242.5269,148.7274 C242.5269,167.1132 237.2281,184.2619 228.081,198.7331 C230.072,199.3848 231.5849,201.1808 231.9367,203.3904 C242.2718,187.7032 248.2929,168.9197 248.2929,148.7274 C248.2929,93.784 203.7535,49.2407 148.8067,49.2407 L148.8067,49.2407 Z" id="rutulys"></path>
						                <path d="M199.2776,200.2488 C199.2776,201.3347 200.16,202.2112 201.2434,202.2112 L218.9577,202.2112 C220.0422,202.2112 220.9246,201.3347 220.9246,200.2488 C220.9246,199.1614 220.0422,198.2815 218.9577,198.2815 L201.2434,198.2815 C200.16,198.2815 199.2776,199.1614 199.2776,200.2488 Z M96.963,129.1284 L79.251,129.1284 C78.1648,129.1284 77.2832,130.0108 77.2832,131.0953 C77.2832,132.1821 78.1648,133.064 79.251,133.064 L96.963,133.064 C98.0496,133.064 98.9289,132.1821 98.9289,131.0953 C98.9289,130.0108 98.0496,129.1284 96.963,129.1284 Z M218.9577,129.1284 L201.2434,129.1284 C200.16,129.1284 199.2776,130.0108 199.2776,131.0953 C199.2776,132.1821 200.16,133.064 201.2434,133.064 L218.9577,133.064 C220.0422,133.064 220.9246,132.1821 220.9246,131.0953 C220.9246,130.0108 220.0422,129.1284 218.9577,129.1284 Z M225.7733,125.322 C225.7733,123.6141 224.3877,122.2305 222.6804,122.2305 L75.6272,122.2305 C73.9211,122.2305 72.5349,123.6141 72.5349,125.322 C72.5349,127.0282 73.9211,128.4129 75.6272,128.4129 L222.6804,128.4129 C224.3877,128.4129 225.7733,127.0282 225.7733,125.322 Z M178.7338,107.0436 C179.4351,107.0436 179.6981,105.7811 179.6981,103.1701 C179.6981,100.7161 179.4702,99.2963 178.7338,99.2963 C178.0146,99.2963 177.647,100.5214 177.6643,103.1701 C177.6305,105.8338 177.9625,107.0436 178.7338,107.0436 Z M157.718,167.9877 L140.5931,167.9877 L140.5931,197.7257 L157.718,197.7257 L157.718,167.9877 Z M186.91,129.1284 L169.2031,129.1284 C168.1138,129.1284 167.2333,130.0108 167.2333,131.0953 C167.2333,132.1821 168.1138,133.064 169.2031,133.064 L186.91,133.064 C187.9974,133.064 188.8793,132.1821 188.8793,131.0953 C188.8793,130.0108 187.9974,129.1284 186.91,129.1284 Z M119.228,99.2251 L119.1765,99.2251 C119.0529,100.0143 118.8777,101.2238 118.7549,101.9075 L118.3167,104.3782 L119.9996,104.3782 L119.6141,101.9075 C119.4911,101.1881 119.3338,99.9964 119.228,99.2251 Z M173.8593,137.5623 L174.7015,137.5623 L173.4602,193.7807 L172.618,193.7807 L173.8593,137.5623 Z M177.6906,137.5623 L178.5362,137.5623 L178.5362,193.7807 L177.6906,193.7807 L177.6906,137.5623 Z M182.0733,137.5623 L183.8733,193.7807 L183.0311,193.7807 L181.23,137.5623 L182.0733,137.5623 Z M169.9183,195.7471 C169.9183,196.8344 170.7976,197.7172 171.887,197.7172 L184.2282,197.7172 C185.3164,197.7172 186.1954,196.8344 186.1954,195.7471 C186.1954,195.1405 185.9125,194.6036 185.4822,194.2413 L183.9181,137.5623 L184.2282,137.5623 C185.3164,137.5623 186.1954,136.6799 186.1954,135.5945 C186.1954,134.5077 185.3164,133.6252 184.2282,133.6252 L171.887,133.6252 C170.7976,133.6252 169.9183,134.5077 169.9183,135.5945 C169.9183,136.6799 170.7976,137.5623 171.887,137.5623 L172.4309,137.5623 L171.0145,193.9921 C170.3668,194.3133 169.9183,194.9763 169.9183,195.7471 Z M158.8417,198.5585 L139.468,198.5585 L139.468,167.076 L158.8417,167.076 L158.8417,198.5585 Z M162.6472,165.3897 C162.6472,164.4577 161.8923,163.7023 160.9628,163.7023 L137.884,163.7023 C136.9528,163.7023 136.1979,164.4577 136.1979,165.3897 C136.1979,166.3206 136.9528,167.076 137.884,167.076 L137.884,198.5585 C136.9528,198.5585 136.1979,199.3159 136.1979,200.2488 C136.1979,201.1802 136.9528,201.9317 137.884,201.9317 L160.9628,201.9317 C161.8923,201.9317 162.6472,201.1802 162.6472,200.2488 C162.6472,199.3159 161.8923,198.5585 160.9628,198.5585 L160.9628,167.076 C161.8923,167.076 162.6472,166.3206 162.6472,165.3897 Z M167.2333,200.2488 C167.2333,201.3347 168.1138,202.2112 169.2031,202.2112 L186.91,202.2112 C187.9974,202.2112 188.8793,201.3347 188.8793,200.2488 C188.8793,199.1614 187.9974,198.2815 186.91,198.2815 L169.2031,198.2815 C168.1138,198.2815 167.2333,199.1614 167.2333,200.2488 Z M129.0067,129.1284 L111.2959,129.1284 C110.2099,129.1284 109.3286,130.0108 109.3286,131.0953 C109.3286,132.1821 110.2099,133.064 111.2959,133.064 L129.0067,133.064 C130.0932,133.064 130.9745,132.1821 130.9745,131.0953 C130.9745,130.0108 130.0932,129.1284 129.0067,129.1284 Z M77.2832,200.2488 C77.2832,201.3347 78.1648,202.2112 79.251,202.2112 L96.963,202.2112 C98.0496,202.2112 98.9289,201.3347 98.9289,200.2488 C98.9289,199.1614 98.0496,198.2815 96.963,198.2815 L79.251,198.2815 C78.1648,198.2815 77.2832,199.1614 77.2832,200.2488 Z M145.4925,109.0075 C142.8106,109.0075 141.7584,106.1683 141.7584,102.9235 C141.7584,99.7002 143.0374,96.9115 145.6676,96.9115 C148.5074,96.9115 149.3133,100.0494 149.3133,102.7483 C149.3133,107.201 147.7361,109.0075 145.4925,109.0075 Z M152.979,107.3246 L154.1016,105.869 C155.5725,103.9941 156.7826,102.4322 156.7826,100.8043 C156.7826,99.8734 156.2743,99.2421 155.3284,99.2421 C154.6092,99.2421 154.031,99.5582 153.6282,99.8212 L153.2072,98.051 C153.7333,97.7012 154.7144,97.3319 155.7482,97.3319 C158.2382,97.3319 159.0446,98.9975 159.0446,100.6283 C159.0446,102.7667 157.712,104.4834 156.3973,106.009 L155.7145,106.8163 L155.7145,106.8517 L159.2014,106.8517 L159.2014,108.8672 L152.979,108.8672 L152.979,107.3246 Z M163.8133,97.3319 C166.4771,97.3319 167.0749,100.4004 167.0749,103.1177 C167.0749,107.201 165.5847,109.0075 163.7439,109.0075 C161.2545,109.0075 160.4138,106.1493 160.4138,103.2223 C160.4138,99.9448 161.4654,97.3319 163.8133,97.3319 Z M170.8795,97.4739 L172.895,97.4739 L172.895,108.8672 L170.6171,108.8672 L170.6171,99.6288 L170.5813,99.6288 L168.6532,100.6283 L168.268,98.8223 L170.8795,97.4739 Z M178.7516,97.3319 C181.4162,97.3319 182.0126,100.4004 182.0126,103.1177 C182.0126,107.201 180.5219,109.0075 178.6816,109.0075 C176.1917,109.0075 175.3515,106.1493 175.3515,103.2223 C175.3515,99.9448 176.4031,97.3319 178.7516,97.3319 Z M140.3022,108.8672 L138.1975,108.8672 L136.393,104.3782 C135.9896,103.3796 135.4635,101.8718 135.1831,100.8202 L135.1483,100.8202 C135.2189,102.0124 135.3056,103.8348 135.3056,106.2199 L135.3056,108.8672 L133.2899,108.8672 L133.2899,97.0515 L135.3935,97.0515 L137.2164,101.6794 C137.5846,102.591 138.1453,104.1152 138.4784,105.1339 L138.5133,105.1339 C138.4433,103.8873 138.2854,101.8367 138.2854,99.6645 L138.2854,97.0515 L140.3022,97.0515 L140.3022,108.8672 Z M131.2546,108.8672 L129.1507,108.8672 L127.3462,104.3782 C126.9423,103.3796 126.4167,101.8718 126.1358,100.8202 L126.1021,100.8202 C126.1715,102.0124 126.2588,103.8348 126.2588,106.2199 L126.2588,108.8672 L124.2434,108.8672 L124.2434,97.0515 L126.3467,97.0515 L128.1705,101.6794 C128.5379,102.591 129.0986,104.1152 129.4316,105.1339 L129.4668,105.1339 C129.3965,103.8873 129.2392,101.8367 129.2392,99.6645 L129.2392,97.0515 L131.2546,97.0515 L131.2546,108.8672 Z M120.7188,108.8672 L120.2097,106.1683 L118.0891,106.1683 L117.5635,108.8672 L115.3375,108.8672 L117.8969,97.0515 L120.6488,97.0515 L122.9451,108.8672 L120.7188,108.8672 Z M76.2134,114.96 L221.4179,114.96 L149.1262,64.9353 L76.2134,114.96 Z M83.7176,137.5623 L84.5615,137.5623 L83.3176,193.7807 L82.4755,193.7807 L83.7176,137.5623 Z M87.5506,137.5623 L88.3936,137.5623 L88.3936,193.7807 L87.5506,193.7807 L87.5506,137.5623 Z M91.9318,137.5623 L93.7332,193.7807 L92.8891,193.7807 L91.0871,137.5623 L91.9318,137.5623 Z M79.9668,195.7471 C79.9668,196.8344 80.8481,197.7172 81.9346,197.7172 L94.2778,197.7172 C95.3654,197.7172 96.245,196.8344 96.245,195.7471 C96.245,195.0532 95.8828,194.4437 95.3368,194.0919 L93.7763,137.5623 L94.2778,137.5623 C95.3654,137.5623 96.245,136.6799 96.245,135.5945 C96.245,134.5077 95.3654,133.6252 94.2778,133.6252 L81.9346,133.6252 C80.8481,133.6252 79.9668,134.5077 79.9668,135.5945 C79.9668,136.6799 80.8481,137.5623 81.9346,137.5623 L82.2918,137.5623 L80.8685,194.0967 C80.3271,194.4482 79.9668,195.0557 79.9668,195.7471 Z M226.0925,116.4195 C225.9459,116.8906 225.5117,117.2101 225.0204,117.2101 L72.5885,117.2101 C72.0947,117.2101 71.6599,116.8875 71.5136,116.4187 C71.3676,115.9467 71.5448,115.4365 71.9518,115.157 L148.4921,62.6435 C148.8762,62.379 149.3844,62.3804 149.7685,62.6469 L225.6602,115.1595 C226.0641,115.4404 226.2393,115.9507 226.0925,116.4195 Z M229.2667,114.4999 L150.9095,59.7263 C149.8499,58.9853 148.4405,58.9828 147.3783,59.7212 L68.3513,114.4925 C67.2401,115.2633 66.759,116.6667 67.163,117.9576 C67.5646,119.2493 68.7612,120.1284 70.1124,120.1284 L227.4954,120.1284 C228.8432,120.1284 230.0383,119.2505 230.4448,117.963 C230.8499,116.676 230.3748,115.2752 229.2667,114.4999 Z M115.7624,137.5623 L116.6057,137.5623 L115.3639,193.7807 L114.5191,193.7807 L115.7624,137.5623 Z M119.5957,137.5623 L120.4384,137.5623 L120.4384,193.7807 L119.5957,193.7807 L119.5957,137.5623 Z M123.9764,137.5623 L125.7781,193.7807 L124.9333,193.7807 L123.1328,137.5623 L123.9764,137.5623 Z M112.011,195.7471 C112.011,196.8344 112.8935,197.7172 113.9797,197.7172 L126.3229,197.7172 C127.4097,197.7172 128.2901,196.8344 128.2901,195.7471 C128.2901,195.0532 127.927,194.4437 127.3799,194.0919 L125.8206,137.5623 L126.3229,137.5623 C127.4097,137.5623 128.2901,136.6799 128.2901,135.5945 C128.2901,134.5077 127.4097,133.6252 126.3229,133.6252 L113.9797,133.6252 C112.8935,133.6252 112.011,134.5077 112.011,135.5945 C112.011,136.6799 112.8935,137.5623 113.9797,137.5623 L114.3366,137.5623 L112.9127,194.0967 C112.3713,194.4482 112.011,195.0557 112.011,195.7471 Z M205.7933,137.5623 L206.6355,137.5623 L205.3908,193.7807 L204.548,193.7807 L205.7933,137.5623 Z M209.6252,137.5623 L210.4674,137.5623 L210.4674,193.7807 L209.6252,193.7807 L209.6252,137.5623 Z M214.0058,137.5623 L215.8064,193.7807 L214.9623,193.7807 L213.1625,137.5623 L214.0058,137.5623 Z M201.962,195.7471 C201.962,196.8344 202.8444,197.7172 203.9318,197.7172 L216.2724,197.7172 C217.3606,197.7172 218.2411,196.8344 218.2411,195.7471 C218.2411,195.0875 217.9117,194.5052 217.4103,194.148 L215.8501,137.5623 L216.2724,137.5623 C217.3606,137.5623 218.2411,136.6799 218.2411,135.5945 C218.2411,134.5077 217.3606,133.6252 216.2724,133.6252 L203.9318,133.6252 C202.8444,133.6252 201.962,134.5077 201.962,135.5945 C201.962,136.6799 202.8444,137.5623 203.9318,137.5623 L204.3661,137.5623 L202.9436,194.0522 C202.3594,194.3961 201.962,195.0234 201.962,195.7471 Z M163.7955,107.0436 C164.4968,107.0436 164.7598,105.7811 164.7598,103.1701 C164.7598,100.7161 164.5331,99.2963 163.7955,99.2963 C163.0783,99.2963 162.7092,100.5214 162.7271,103.1701 C162.6914,105.8338 163.0247,107.0436 163.7955,107.0436 Z M225.7977,221.9315 L185.1146,221.9315 L185.1146,220.5593 L224.4235,220.5593 L224.4235,206.1998 L169.0129,206.1998 L169.0129,204.6935 L225.7977,204.6935 L225.7977,221.9315 Z M178.242,222.7346 L119.8766,222.7346 C118.9446,222.7346 118.1903,221.9763 118.1903,221.0477 C118.1903,220.1162 118.9446,219.3608 119.8766,219.3608 L178.242,219.3608 C179.1729,219.3608 179.9289,220.1162 179.9289,221.0477 C179.9289,221.9763 179.1729,222.7346 178.242,222.7346 Z M113.3306,221.9315 L72.51,221.9315 L72.5111,204.6935 L129.6987,204.6935 L129.6987,206.1998 L73.8848,206.1998 L73.8848,220.5593 L113.3306,220.5593 L113.3306,221.9315 Z M172.874,214.3012 C173.8052,214.3012 174.5595,215.0555 174.5595,215.987 C174.5595,216.919 173.8052,217.6745 172.874,217.6745 L125.2435,217.6745 C124.312,217.6745 123.5571,216.919 123.5571,215.987 C123.5571,215.0555 124.312,214.3012 125.2435,214.3012 L172.874,214.3012 Z M167.6254,209.8038 C168.5568,209.8038 169.3128,210.5541 169.3128,211.4893 C169.3128,212.4173 168.5568,213.177 167.6254,213.177 L130.4926,213.177 C129.5618,213.177 128.8058,212.4173 128.8058,211.4893 C128.8058,210.5541 129.5618,209.8038 130.4926,209.8038 L167.6254,209.8038 Z M136.2745,204.7417 L161.8435,204.7417 C162.7742,204.7417 163.527,205.5005 163.527,206.4286 C163.527,207.364 162.7742,208.116 161.8435,208.116 L136.2745,208.116 C135.3439,208.116 134.5881,207.364 134.5881,206.4286 C134.5881,205.5005 135.3439,204.7417 136.2745,204.7417 Z M226.4264,202.4434 L71.8832,202.4434 C70.9869,202.4434 70.261,203.3059 70.261,204.3701 L70.261,222.2555 C70.261,223.3183 70.9869,224.1823 71.8832,224.1823 L226.4264,224.1823 C227.3196,224.1823 228.0447,223.3183 228.0447,222.2555 L228.0447,204.3701 C228.0447,203.3059 227.3196,202.4434 226.4264,202.4434 Z M145.5625,98.9096 C144.6503,98.9096 144.142,100.4174 144.142,102.9592 C144.142,105.6416 144.6503,107.0085 145.5798,107.0085 C146.5606,107.0085 146.9296,105.2541 146.9296,102.8546 C146.9296,100.785 146.6141,98.9096 145.5625,98.9096 Z M109.3286,200.2488 C109.3286,201.3347 110.2099,202.2112 111.2959,202.2112 L129.0067,202.2112 C130.0932,202.2112 130.9745,201.3347 130.9745,200.2488 C130.9745,199.1614 130.0932,198.2815 129.0067,198.2815 L111.2959,198.2815 C110.2099,198.2815 109.3286,199.1614 109.3286,200.2488 L109.3286,200.2488 Z" id="dvaras"></path>
						            </g>
						        </g>
						</svg>
					</div>
					<div class="m02">	
					<div>Monteball 2024 čempionatas</div>
					<div class="mazas-tekstas">(registracija į įskaitinį žaidimą)</div>
						
					</div>
					<div class="m02">
						<div class="reiksme">${zaidimas.kaina}€</div>
						<div class="vienetai">žaidėjui</div>
					</div>
				</div>
				`
			}
			else if(zaidimas.zaidimas === 'tablemonteball') { 
			new_element.outerHTML = 
				`<div class="opcija f sa" name="${zaidimas.id}" onclick="rinktisZaidima(this)">
					<div><div>TABLE</div><div>MONTEBALL</div></div>
					<div><div class="reiksme">${zaidimas.kaina}€</div><div class="vienetai">žaidėjui</div></div>
					<div><div class="reiksme">~${zaidimas.trukme/60}</div><div class="vienetai">val.</div></div>
				</div>`
			}
			else {
			new_element.outerHTML = 
				`
				<div class="opcija f sa" name="${zaidimas.id}" onclick="rinktisZaidima(this)">
					<div class="m04"><div class="reiksme">~${zaidimas.trukme/60}</div><div class="vienetai">val.</div></div>
					<div class="m04"><div class="reiksme">${zaidimas.duobutes}</div><div class="vienetai">duobu${zaidimas.duobutes<10 ? 'tės' : 'čių'}</div></div>
					<div class="m04"><div class="reiksme">${zaidimas.kaina}€</div><div class="vienetai">žaidėjui</div></div>
				</div>
				`
			}
		})
	e('zaidimai').children[0].click()
}

function rinktisZaidima(opcija) {
	const varianto_id = ag(opcija, 'name')
	var zaidimo_variantas = zaidimai.find(variantas => variantas.id === varianto_id)
	rezervacija.zaidimas = zaidimo_variantas
	rinktis(opcija)
	rodytiKalendoriu()
	atnaujintiKaina()
	if(e('info-zaidejai') && rezervacija.zaidimas.zaidimas === 'tablemonteball' && rezervacija.zaidejai <=5 ) { e('info-zaidejai').remove() }
	if(e('info-zaidejai') && rezervacija.zaidimas.zaidimas === 'monteball' && rezervacija.zaidejai <=9 ) { e('info-zaidejai').remove() }
}

function rodytiKalendoriu() {
	const calendar_date = new Date('20'+ metai, menuo-1, 1)
	t(e('menesio-tekstas'), menesiai[menuo-1])

	const dienos = e('dienos')
	var tuscios_dienos = 0
	const pirma_menesio_diena = new Date(calendar_date.getFullYear(), calendar_date.getMonth(), 1)
	const paskutine_menesio_diena = new Date(calendar_date.getYear(), calendar_date.getMonth()+1, 0).getDate()
	const savaites_diena = pirma_menesio_diena.getDay()

	if(savaites_diena == 0) { tuscios_dienos = 6 }
	else { tuscios_dienos = savaites_diena - 1 }

	ih(dienos, '')

	if(tuscios_dienos) { for(let i = 0; i < tuscios_dienos; i++) { add(dienos, ec({e: 'div', a: {class: 'diena'}, t:''})) } }

	for(let d = 1; d < paskutine_menesio_diena+1; d++) {
		let key = metai + tdn(menuo) + tdn(d)
		if(dabar_menuo == menuo && d < dabar_diena) { add(dienos, ec({e: 'div', a: {class: 'diena pilka', key: key }, t: d})) }
		else if(rezervacija.zaidimas.nuo && rezervacija.zaidimas.nuo > parseInt( metai + tdn(menuo) + tdn(d)) || rezervacija.zaidimas.iki < parseInt( metai + tdn(menuo) + tdn(d))) { add(dienos, ec({e: 'div', a: {class: 'diena pilka', key: key, onclick: "notify('Pasirinkto žaidimo šią dieną žaisti negalima.')" }, t: d})) }
		else if(dabar_menuo == menuo && d.toString().padStart(2, "0") === dabar_diena) { add(dienos, ec({e: 'div', a: {class: 'diena geltona', key: key, onclick: "notify('Dėl galimybės žaisti šiandien teiraukitės telefonu.')" }, t: d})) }
		else { add(dienos, ec({e: 'div', a: {class: 'diena', onclick: 'rinktisData(this)', diena: key }, t: d})) }
	}

	if(dabar_menuo == menuo && dabar_metai == metai) { ca(e('menesis-atgal'), 'pilka') }
	else { cr(e('menesis-atgal'), 'pilka') }
}

function praeitasMenuo() {
	if(menuo == 1) { menuo = 12; metai--} 
	else if(dabar_menuo == menuo && dabar_metai == metai) { }
	else { menuo-- }
	rodytiKalendoriu()
}

function kitasMenuo() {
	if(menuo == 12) { menuo = 1; metai++}
	else { menuo++ }
	rodytiKalendoriu()
}

function rinktisData(opcija) {
	rezervacija.diena = ag(opcija, 'diena')
	rinktis(opcija)
	pridetiLaikus()
}

function pridetiLaikus() {
	const laikai = e('laikai')

	ih(laikai, '')


	let slotai = []
	let uzimti_dienos_laikai = []

	if(rezervacija.zaidimas.zaidimas === 'tablemonteball') {
		
		db.ref(`uzimti_laikai/tablemonteball/${rezervacija.diena}`).get().then(snap => {
			if(snap.exists()) {
				for(valandike of snap.val()) { uzimti_dienos_laikai.push(valandike)}
			}

			for(let nuo = nustatymai.laikai.pirma['tablemonteball'][menuo-1]; nuo <= nustatymai.laikai.paskutine['tablemonteball'][menuo-1]; nuo++) {
				if(!uzimti_dienos_laikai.includes(tdn(nuo)+'00')) { slotai.push(nuo)}

			}

			for(slot of slotai) {
				add(laikai, ec({e: 'div', a: { laikas: tdn(slot)+'00', class: 'opcija', onclick: 'rinktisLaika(this);'}, t: `${slot}:00`}))
			}
		})

	}
	else {

		db.ref(`uzimti_laikai/${rezervacija.lokacija}/${rezervacija.diena}`).get().then(snap => {
			if(snap.exists()) {
				for(valandike in snap.val()) { uzimti_dienos_laikai.push(valandike) }
			}

			for(let nuo = nustatymai.laikai.pirma[rezervacija.lokacija][menuo-1]; nuo <= nustatymai.laikai.paskutine[rezervacija.lokacija][menuo-1]; nuo++) {
				if(!uzimti_dienos_laikai.includes(tdn(nuo)+'00')) { slotai.push(nuo)}
			}
			for(slot of slotai) {
				add(laikai, ec({e: 'div', a: { laikas: tdn(slot)+'00', class: 'opcija', onclick: 'rinktisLaika(this);'}, t: `${slot}:00`}))
			}
		})
	}





	// db.ref(`laisvi_laikai/${rezervacija.lokacija}/20${metai}/${tdn(menuo)}/${rezervacija.diena.slice(4,6)}`).orderByKey().on('value', snap=> {
	// 	ih(laikai, '')
	// 	let laisvi_laikai = snap.val()
	// 	if(laisvi_laikai) {
	// 		let surusiuoti_laikai = Object.keys(laisvi_laikai).sort((a,b) => a-b)
	// 		for(laikas of surusiuoti_laikai) {
	// 			add(laikai, ec({e: 'div', a: { laikas: laikas, class: 'opcija', onclick: 'rinktisLaika(this);'}, t: `${laikas.slice(0,2)}:${laikas.slice(2,4)}`}))
	// 		}
	// 	}
	// 	else { notify('Dėl galimybės žaisti šią dieną teiraukitės telefonu.')}
	// })
}

function rinktisLaika(opcija) {
	rezervacija.laikas = ag(opcija, 'laikas')
	rinktis(opcija)
	// sp('l', rezervacija.valanda)
}

function pridetiZmogu(element) {
	var number_element = e('zaideju_skaicius')
	var number = number_element.innerText

	if(rezervacija.zaidimas.zaidimas === 'tablemonteball') { if(number > 3 && e('info-zaidejai')) { e('info-zaidejai').remove() } }
	else { if(number > 7 && e('info-zaidejai')) { e('info-zaidejai').remove() } }

	if(number == 1) { qe(p(number_element), '.minus').classList.remove('disabled') }

	if(rezervacija.zaidimas.zaidimas === 'tablemonteball' && number == 18) {
		add(p(p(element)), ec({e: 'div', a: {id: 'info-zaidejai', class: 'zinute'}, t: 'Maksimalus table monteball žaidėjų skaičius: 18'}))
	}
	else { number ++ }

	number_element.innerText = number
	rezervacija.zaidejai = number
	atnaujintiKaina()
}

function nuimtiZmogu(element) {
	var number_element = e('zaideju_skaicius')
	var number = number_element.innerText

	if(number == 2) { element.classList.add('disabled') }

	if(rezervacija.zaidimas.zaidimas === 'monteball' && number <= 9 && !e('info-zaidejai')) {
		add(p(p(element)), ec({e: 'div', a: {id: 'info-zaidejai', class: 'zinute'}, t: 'Minimali kaina skaičiuojama nuo 9 žaidėjų'}))
	}
	else if(rezervacija.zaidimas.zaidimas === 'tablemonteball') {
		if(e('info-zaidejai')) { 
			if(number <= 5) { t(e('info-zaidejai'), 'Minimali kaina skaičiuojama nuo 5 žaidėjų') }
			else { e('info-zaidejai').remove() }
		}
		else if(number <= 5) { add(p(p(element)), ec({e: 'div', a: {id: 'info-zaidejai', class: 'zinute'}, t: 'Minimali kaina skaičiuojama nuo 5 žaidėjų'}) )}
	} 

	if(number > 1) { number-- }

	number_element.innerText = number
	rezervacija.zaidejai = number
	atnaujintiKaina()
}		

function atnaujintiKaina() {
	var daugiklis = 0

	if(rezervacija.zaidimas.zaidimas === 'tablemonteball') { daugiklis = rezervacija.zaidejai < 5 ? 5 : rezervacija.zaidejai }
	else { daugiklis = rezervacija.zaidejai < 9 ? 9 : rezervacija.zaidejai }

	rezervacija.mokejimas.suma = rezervacija.zaidimas.kaina * daugiklis

	const mokestis = Math.round(rezervacija.mokejimas.suma * 0.1)

	if(rezervacija.mokejimas.procentas == 10) {
		rezervacija.mokejimas.liko_moketi = rezervacija.mokejimas.suma - mokestis
		rezervacija.mokejimas.moketi = mokestis
	}
	else {
		rezervacija.mokejimas.procentas = 100
		rezervacija.mokejimas.moketi = rezervacija.mokejimas.suma
	}

	qa('.kaina').forEach(kainele => { t(kainele, rezervacija.mokejimas.suma ) })
	t(e('mokestis'), mokestis)
	t(e('mokama-suma'), rezervacija.mokejimas.moketi)
}

function pasirinktiMokejima(opcija) {
	rezervacija.mokejimas = ag(opcija, 'key')
	rinktis(opcija)
	atnaujintiKaina()
}

function sutikimas(elementas) {
	elementas.classList.toggle('checked')
	if(!cc(e('zinute-nesutikus'), 'hidden')) { ca(e('zinute-nesutikus'), 'hidden') }
}

function mokejimas(button) {
	const klaidos = tikrintiKlaidas()

	if(!klaidos) {
		let mygtukas_paspaustas = Date.now()
		button.disabled = true
		button.classList.add('paspaustas')
		ca(button, 'f')
		ih(button, '<div class="" id="kamuolys"><img src="svg/soccer-ball.svg"/></div>')

		fs.collection('paymentIntents').add({
				rezervacija: rezervacija,
				to_pay: rezervacija.mokejimas.moketi,
				type: rezervacija.mokejimas.budas,
		}).then(resp => {
			console.log('issaugota mokejimo informacija')  
				db.ref('paymentRedirects/' + resp.id).on('value', doc => {
				console.log('laukiama mokejimo nuorodos')
				if(doc.val() && doc.val().url) {
					console.log('gautas atsakymas, nukreipiama.')
					if(Date.now() - mygtukas_paspaustas < 5000 ){
						setTimeout(() => {
							window.location.href = doc.val().url
						}, mygtukas_paspaustas + 5000 - Date.now())
					}
					else window.location.href = doc.val().url
				}
			})
		})
	}
}

function tikrintiKlaidas() {
	rezervacija.kontaktas.vardas = e('vardas').value
	rezervacija.kontaktas.telefonas = e('telefonas').value
	rezervacija.kontaktas.el_pastas = e('el_pastas').value

	var klaidos = {telefonas: false, el_pastas: false, taisykles: false}

	const regex = /^\+?\d{1,4}?[-.\s]?\(?\d{1,3}?\)?[-.\s]?\d{1,4}[-.\s]?\d{1,4}[-.\s]?\d{1,9}$/;

	if(!regex.test(rezervacija.kontaktas.telefonas)) {
		cr(e('blogas-telefonas'), 'hidden')
		klaidos.telefonas = true
	} 

	if(!rezervacija.kontaktas.el_pastas.toLowerCase().match(
      /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|.(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
    )) {
		cr(e('blogas-elpastas'), 'hidden')
		klaidos.el_pastas = true
    } 

	if(!cc(e('taisykles'), 'checked')) {
		cr(e('zinute-nesutikus'), 'hidden')
		klaidos.taisykles = true
	}

	return Object.values(klaidos).some(bool => bool == true)
}